public class Root
{
    [XmlAttribute("Code")]
    public string Code { get; set; }

    [XmlAttribute("Name")]
    public string Name { get; set; }

    public ProposalDetails ProposalDetails { get; set; }
}

public class ProposalDetails
{
    public RiskDetails RiskDetails { get; set; }
    public GeneralProposalInformation GeneralProposalInformation { get; set; }
    public List<ClauseDetails> ClauseDetails { get; set; } = new List<ClauseDetails>();
    public List<WarrantyDetails> WarrantyDetails { get; set; } = new List<WarrantyDetails>();
    public List<ConditionDetails> ConditionDetails { get; set; } = new List<ConditionDetails>();
    public List<ExclusionDetails> ExclusionDetails { get; set; } = new List<ExclusionDetails>();
    public OtherMappingFields OtherMappingFields { get; set; }
}

public class RiskDetails
{
    public Block Block { get; set; }
}

public class Block
{
    public List<PropertyRisk> PropRisks { get; set; } = new List<PropertyRisk>();
    public OtherDetailsGrid OtherDetailsGrid { get; set; }
    public RiskCoverDetailsGrid RiskCoverDetailsGrid { get; set; }
}

public class PropertyRisk
{
    [XmlAttribute("Type")]
    public string Type { get; set; }

    [XmlAttribute("Value")]
    public string Value { get; set; }

    [XmlAttribute("Name")]
    public string Name { get; set; }
}

public class OtherDetailsGrid
{
    public List<GroupData> Items { get; set; } = new List<GroupData>();
}

public class RiskCoverDetailsGrid
{
    public List<RiskGroup> RiskGroups { get; set; } = new List<RiskGroup>();
}

public class RiskGroup
{
    [XmlAttribute("Name")]
    public string Name { get; set; }

    [XmlAttribute("Value")]
    public string Value { get; set; }

    [XmlAttribute("Type")]
    public string Type { get; set; }

    public List<CoverSIComponent> CoverSIComponents { get; set; } = new List<CoverSIComponent>();
}

public class CoverSIComponent
{
    [XmlAttribute("Name")]
    public string Name { get; set; }

    [XmlAttribute("Value")]
    public string Value { get; set; }

    [XmlAttribute("Type")]
    public string Type { get; set; }

    public List<PropertyCoverDetail> PropCoverDetails { get; set; } = new List<PropertyCoverDetail>();
}

public class PropertyCoverDetail : PropertyRisk { }

public class GroupData
{
    [XmlAttribute("Name")]
    public string Name { get; set; }

    [XmlAttribute("Value")]
    public string Value { get; set; }

    [XmlAttribute("Type")]
    public string Type { get; set; }

    public List<GroupItem> Items { get; set; } = new List<GroupItem>();
}

public class GroupItem : PropertyRisk { }

public class GeneralProposalInformation
{
    public List<PropertyRisk> Items { get; set; } = new List<PropertyRisk>();
}

public class ClauseDetails
{
    [XmlAttribute("Type")]
    public string Type { get; set; }

    public List<PropertyClauseDetail> PropClauseDetails { get; set; } = new List<PropertyClauseDetail>();
}

public class PropertyClauseDetail : PropertyRisk { }

public class WarrantyDetails
{
    [XmlAttribute("Type")]
    public string Type { get; set; }

    public List<PropertyWarrantyDetail> PropWarrantyDetails { get; set; } = new List<PropertyWarrantyDetail>();
}

public class PropertyWarrantyDetail : PropertyRisk { }

public class ConditionDetails
{
    [XmlAttribute("Type")]
    public string Type { get; set; }

    public List<PropertyConditionDetail> PropConditionDetails { get; set; } = new List<PropertyConditionDetail>();
}

public class PropertyConditionDetail : PropertyRisk { }

public class ExclusionDetails
{
    [XmlAttribute("Type")]
    public string Type { get; set; }

    public List<PropertyExclusionDetail> PropExclusionDetails { get; set; } = new List<PropertyExclusionDetail>();
}

public class PropertyExclusionDetail : PropertyRisk { }

public class OtherMappingFields
{
    public List<MappingField> Items { get; set; } = new List<MappingField>();
}

public class MappingField
{
    [XmlAttribute("Type")]
    public string Type { get; set; }

    [XmlAttribute("Name")]
    public string Name { get; set; }

    [XmlAttribute("Value")]
    public string Value { get; set; }
}





















using System.Xml.Serialization;
using System.Xml;
using System.IO;

public class XmlGenerator
{
    public static string GenerateXml(Root rootModel)
    {
        var serializer = new XmlSerializer(typeof(Root));
        var settings = new XmlWriterSettings
        {
            Indent = true,
            OmitXmlDeclaration = false
        };

        using (var stringWriter = new StringWriter())
        using (var xmlWriter = XmlWriter.Create(stringWriter, settings))
        {
            var namespaces = new XmlSerializerNamespaces();
            namespaces.Add("", ""); // Remove namespace declarations
            
            serializer.Serialize(xmlWriter, rootModel, namespaces);
            return stringWriter.ToString();
        }
    }

    public static Root CreateSampleModel()
    {
        return new Root
        {
            Code = "2965",
            Name = "HomeComprehensivePackage",
            ProposalDetails = new ProposalDetails
            {
                RiskDetails = new RiskDetails
                {
                    Block = new Block
                    {
                        PropRisks = new List<PropertyRisk>
                        {
                            new PropertyRisk { Name = "PropRisks_AdmittedNonAdmittedLocation", Type = "String", Value = "" },
                            new PropertyRisk { Name = "PropRisks_AreaLocality", Type = "String", Value = "ABINASH CHAOWDHURY LANE" },
                            // Add other property risks as needed
                        },
                        OtherDetailsGrid = new OtherDetailsGrid
                        {
                            Items = new List<GroupData>
                            {
                                new GroupData
                                {
                                    Name = "BPSooksmaFireSectionSI",
                                    Value = "GRP1057",
                                    Type = "GroupData",
                                    Items = new List<GroupItem>
                                    {
                                        new GroupItem { Name = "ItemType", Type = "String", Value = "Additional Structure" },
                                        new GroupItem { Name = "Description", Type = "String", Value = "fgndhndf" },
                                        new GroupItem { Name = "SumInsured", Type = "Double", Value = "10000" }
                                    }
                                },
                                // Add other group data items as needed
                            }
                        },
                        RiskCoverDetailsGrid = new RiskCoverDetailsGrid
                        {
                            RiskGroups = new List<RiskGroup>
                            {
                                new RiskGroup
                                {
                                    Name = "Bharat Griha Raksha Material Damage",
                                    Value = "Risk Wise Cover Details",
                                    Type = "GroupData",
                                    CoverSIComponents = new List<CoverSIComponent>
                                    {
                                        new CoverSIComponent
                                        {
                                            Name = "Section I Bharat Griha Raksha Material Damage",
                                            Value = "10000",
                                            PropCoverDetails = new List<PropertyCoverDetail>
                                            {
                                                new PropertyCoverDetail { Name = "PropCoverDetails_Applicable", Type = "Boolean", Value = "True" },
                                                // Add other cover details as needed
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                GeneralProposalInformation = new GeneralProposalInformation
                {
                    Items = new List<PropertyRisk>
                    {
                        new PropertyRisk { Name = "ErrorTrackingNeeded", Type = "Boolean", Value = "False" },
                        // Add other general info items as needed
                    }
                },
                ClauseDetails = new List<ClauseDetails>
                {
                    new ClauseDetails
                    {
                        Type = "GroupData",
                        PropClauseDetails = new List<PropertyClauseDetail>
                        {
                            new PropertyClauseDetail { Name = "PropClauseDetails_ClauseCode_Mandatary", Type = "Double", Value = "48230" },
                            // Add other clause details as needed
                        }
                    }
                },
                // Initialize other sections similarly
                OtherMappingFields = new OtherMappingFields
                {
                    Items = new List<MappingField>
                    {
                        new MappingField { Type = "Bharat Griha Raksha Material Damage", Name = "Section I Bharat Griha Raksha Material Damage", Value = "10000" },
                        // Add other mapping fields as needed
                    }
                }
            }
        };
    }
}




















// Create a populated model (either manually or using the CreateSampleModel method)
var rootModel = XmlGenerator.CreateSampleModel();

// Generate the XML string
string xml = XmlGenerator.GenerateXml(rootModel);

// Save to file if needed
File.WriteAllText("output.xml", xml);











public class RootBuilder
{
    private Root _root = new Root();

    public RootBuilder WithBasicInfo(string code, string name)
    {
        _root.Code = code;
        _root.Name = name;
        return this;
    }

    public RootBuilder WithRiskDetail(string areaLocality, string country)
    {
        _root.ProposalDetails ??= new ProposalDetails();
        _root.ProposalDetails.RiskDetails ??= new RiskDetails();
        _root.ProposalDetails.RiskDetails.Block ??= new Block();
        
        _root.ProposalDetails.RiskDetails.Block.PropRisks.Add(
            new PropertyRisk { Name = "PropRisks_AreaLocality", Type = "String", Value = areaLocality });
        
        _root.ProposalDetails.RiskDetails.Block.PropRisks.Add(
            new PropertyRisk { Name = "PropRisks_Country1", Type = "String", Value = country });
        
        return this;
    }

    // Add more builder methods for other sections
    
    public Root Build()
    {
        return _root;
    }
}

// Usage:
var root = new RootBuilder()
    .WithBasicInfo("2965", "HomeComprehensivePackage")
    .WithRiskDetail("NEW AREA", "India")
    .Build();


